{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Koti\\\\Desktop\\\\todolist\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\nimport CreateNoteForm from \"./components/CreateNoteForm\";\nimport notesApi from \"./services/notes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [message, setMessage] = useState(null);\n  const [editingNote, setEditingNote] = useState(null);\n  const CreateNoteFormRef = useRef();\n  useEffect(() => {\n    noteService.getAll().then(notes => setNotes(notes));\n  }, []);\n  const createNote = noteObject => {\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setMessage(`a new note ${noteObject.note} added`);\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    });\n  };\n  const handleEdit = id => {\n    const noteToBeEdited = notes.find(note => note.id === id);\n    CreateNoteFormRef.current.setInitialValue(noteToBeEdited.note);\n    setEditingNote(noteToBeEdited);\n  };\n  const handleRemove = id => {\n    const noteToBeDeleted = notes.find(note => note.id === id);\n    if (window.confirm(`Remove note \"${noteToBeDeleted.note}\"`)) {\n      noteService.remove(id).then(() => {\n        setNotes(prevNotes => prevNotes.filter(note => note.id !== id));\n        setMessage(`Removed note \"${noteToBeDeleted.note}\"`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    }\n  };\n  console.log(notes.map({\n    notes\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateNoteForm, {\n      createNote: createNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this), notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n      note: note,\n      handleRemove: handleRemove,\n      handleEdit: () => handleEdit(note.id)\n    }, note.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lj+tT+waW/GZ8Dg/nb7Veta2UtI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","Note","noteService","CreateNoteForm","notesApi","jsxDEV","_jsxDEV","App","_s","notes","setNotes","message","setMessage","editingNote","setEditingNote","CreateNoteFormRef","getAll","then","createNote","noteObject","create","returnedNote","concat","note","setTimeout","handleEdit","id","noteToBeEdited","find","current","setInitialValue","handleRemove","noteToBeDeleted","window","confirm","remove","prevNotes","filter","console","log","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/Koti/Desktop/todolist/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\nimport CreateNoteForm from \"./components/CreateNoteForm\";\nimport notesApi from \"./services/notes\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [message, setMessage] = useState(null);\n  const [editingNote, setEditingNote] = useState(null);\n  const CreateNoteFormRef = useRef();\n\n  useEffect(() => {\n    noteService.getAll().then((notes) => setNotes(notes));\n  }, []);\n\n  const createNote = (noteObject) => {\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setMessage(`a new note ${noteObject.note} added`)\n        setTimeout(() => {\n        setMessage(null)\n        }, 5000)\n      })\n  }\n\n  const handleEdit = (id) => {\n    const noteToBeEdited = notes.find((note) => note.id === id);\n    CreateNoteFormRef.current.setInitialValue(noteToBeEdited.note);\n    setEditingNote(noteToBeEdited);\n  };\n\n  const handleRemove = (id) => {\n    const noteToBeDeleted = notes.find((note) => note.id === id);\n    if (window.confirm(`Remove note \"${noteToBeDeleted.note}\"`)) {\n      noteService.remove(id).then(() => {\n        setNotes((prevNotes) => prevNotes.filter((note) => note.id !== id));\n        setMessage(`Removed note \"${noteToBeDeleted.note}\"`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    }\n  };\n  console.log(notes.map({notes}))\n\n  return (\n    <div>\n      <h2>Notes</h2>\n      <CreateNoteForm createNote={createNote} />\n      {message && <div className=\"message\">{message}</div>}\n      {notes.map((note) => (\n        <Note\n          key={note.id}\n          note={note}\n          handleRemove={handleRemove}\n          handleEdit={() => handleEdit(note.id)}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}