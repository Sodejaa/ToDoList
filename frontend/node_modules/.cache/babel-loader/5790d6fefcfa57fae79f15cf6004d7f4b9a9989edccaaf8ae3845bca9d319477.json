{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Koti\\\\Desktop\\\\todolist\\\\frontend\\\\src\\\\App.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport React, { forwardRef, useImperativeHandle } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\nimport CreateNoteForm from \"./components/CreateNoteForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [notes, setNotes] = useState([]);\n  const [message, setMessage] = useState(null);\n  const [editingNote, setEditingNote] = useState(null);\n  const CreateNoteFormRef = useRef();\n  useEffect(() => {\n    noteService.getAll().then(notes => setNotes(notes));\n  }, []);\n  const addNote = noteObject => {\n    _s();\n    if (!editingNote) {\n      // Adding a new note\n      noteService.create(noteObject).then(returnedNote => {\n        setNotes(notes.concat(returnedNote));\n        setMessage(`A new note \"${noteObject.note}\" added`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    } else {\n      // Editing an existing note\n      noteService.update(editingNote.id, noteObject).then(updatedNote => {\n        setNotes(notes.map(note => note.id === editingNote.id ? updatedNote : note));\n        setMessage(`Note \"${noteObject.note}\" updated`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n        setEditingNote(null);\n      });\n    }\n\n    // Reset the form and editing state\n    const CreateNoteFormRef = useRef();\n    CreateNoteFormRef.current.resetForm();\n    setEditingNote(null);\n  };\n  _s(addNote, \"8spsMrr/IadzFpmHLRln9R4mUtM=\");\n  const handleEdit = id => {\n    const noteToBeEdited = notes.find(note => note.id === id);\n    CreateNoteFormRef.current.setInitialValue(noteToBeEdited.note);\n    setEditingNote(noteToBeEdited);\n  };\n  const handleRemove = id => {\n    const noteToBeDeleted = notes.find(note => note.id === id);\n    if (window.confirm(`Remove note \"${noteToBeDeleted.note}\"`)) {\n      noteService.remove(id).then(() => {\n        setNotes(notes.filter(note => note.id !== id));\n        setMessage(`Removed note \"${noteToBeDeleted.note}\"`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }, this), notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n      note: note,\n      handleRemove: handleRemove,\n      handleEdit: () => handleEdit(note.id)\n    }, note.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(CreateNoteForm, {\n      createNote: addNote,\n      ref: CreateNoteFormRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"lj+tT+waW/GZ8Dg/nb7Veta2UtI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","React","forwardRef","useImperativeHandle","Note","noteService","CreateNoteForm","jsxDEV","_jsxDEV","App","_s2","_s","$RefreshSig$","notes","setNotes","message","setMessage","editingNote","setEditingNote","CreateNoteFormRef","getAll","then","addNote","noteObject","create","returnedNote","concat","note","setTimeout","update","id","updatedNote","map","current","resetForm","handleEdit","noteToBeEdited","find","setInitialValue","handleRemove","noteToBeDeleted","window","confirm","remove","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","className","createNote","ref","_c","$RefreshReg$"],"sources":["C:/Users/Koti/Desktop/todolist/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport React, {forwardRef, useImperativeHandle } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\nimport CreateNoteForm from \"./components/CreateNoteForm\";\n\n\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [message, setMessage] = useState(null);\n  const [editingNote, setEditingNote] = useState(null);\n  const CreateNoteFormRef = useRef();\n\n  useEffect(() => {\n    noteService.getAll().then((notes) => setNotes(notes));\n  }, []);\n\n  const addNote = (noteObject) => {\n    if (!editingNote) {\n      // Adding a new note\n      noteService.create(noteObject).then((returnedNote) => {\n        setNotes(notes.concat(returnedNote));\n        setMessage(`A new note \"${noteObject.note}\" added`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    } else {\n      // Editing an existing note\n      noteService.update(editingNote.id, noteObject).then((updatedNote) => {\n        setNotes(notes.map((note) => (note.id === editingNote.id ? updatedNote : note)));\n        setMessage(`Note \"${noteObject.note}\" updated`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n        setEditingNote(null);\n      });\n    }\n\n    // Reset the form and editing state\n    const CreateNoteFormRef = useRef();\n    CreateNoteFormRef.current.resetForm();\n    setEditingNote(null);\n  };\n\n  const handleEdit = (id) => {\n    const noteToBeEdited = notes.find((note) => note.id === id);\n    CreateNoteFormRef.current.setInitialValue(noteToBeEdited.note);\n    setEditingNote(noteToBeEdited);\n  };\n\n  const handleRemove = (id) => {\n    const noteToBeDeleted = notes.find((note) => note.id === id);\n    if (window.confirm(`Remove note \"${noteToBeDeleted.note}\"`)) {\n      noteService.remove(id).then(() => {\n        setNotes(notes.filter((note) => note.id !== id));\n        setMessage(`Removed note \"${noteToBeDeleted.note}\"`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Notes</h2>\n      {message && <div className=\"message\">{message}</div>}\n      {notes.map((note) => (\n        <Note\n          key={note.id}\n          note={note}\n          handleRemove={handleRemove}\n          handleEdit={() => handleEdit(note.id)}\n        />\n      ))}\n      <CreateNoteForm createNote={addNote} ref={CreateNoteFormRef} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}