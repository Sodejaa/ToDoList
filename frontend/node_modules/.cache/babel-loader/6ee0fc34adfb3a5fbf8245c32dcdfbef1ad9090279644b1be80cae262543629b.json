{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Koti\\\\Desktop\\\\todolist\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\nimport CreateNoteForm from \"./components/CreateNoteForm\";\nimport notesApi from \"./services/notes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [message, setMessage] = useState(null);\n  const [setEditingNote] = useState(null);\n  const CreateNoteFormRef = useRef();\n  useEffect(() => {\n    noteService.getAll().then(notes => setNotes(notes));\n  }, []);\n  const createNote = async newNoteObject => {\n    try {\n      const createdNote = await notesApi.create(newNoteObject);\n      console.log('Note created:', createdNote);\n\n      // Update the state with the new note\n      setNotes(prevNotes => [...prevNotes, createdNote]);\n    } catch (error) {\n      console.error('Error creating note:', error);\n    }\n  };\n  const handleEdit = id => {\n    const noteToBeEdited = notes.find(note => note.id === id);\n    CreateNoteFormRef.current.setInitialValue(noteToBeEdited.note);\n    setEditingNote(noteToBeEdited);\n  };\n  const handleRemove = id => {\n    const noteToBeDeleted = notes.find(note => note.id === id);\n    if (window.confirm(`Remove note \"${noteToBeDeleted.note}\"`)) {\n      noteService.remove(id).then(() => {\n        setNotes(notes.filter(note => note.id !== id));\n        setMessage(`Removed note \"${noteToBeDeleted.note}\"`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this), notes.map(note => /*#__PURE__*/_jsxDEV(Note, {\n      note: note,\n      handleRemove: handleRemove,\n      handleEdit: () => handleEdit(note.id)\n    }, note.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(CreateNoteForm, {\n      createNote: createNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vEAkJKzvouxdGtLC5iDLdLjHEPA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","Note","noteService","CreateNoteForm","notesApi","jsxDEV","_jsxDEV","App","_s","notes","setNotes","message","setMessage","setEditingNote","CreateNoteFormRef","getAll","then","createNote","newNoteObject","createdNote","create","console","log","prevNotes","error","handleEdit","id","noteToBeEdited","find","note","current","setInitialValue","handleRemove","noteToBeDeleted","window","confirm","remove","filter","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","_c","$RefreshReg$"],"sources":["C:/Users/Koti/Desktop/todolist/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\nimport CreateNoteForm from \"./components/CreateNoteForm\";\nimport notesApi from \"./services/notes\";\n\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [message, setMessage] = useState(null);\n  const [setEditingNote] = useState(null);\n  const CreateNoteFormRef = useRef();\n\n  useEffect(() => {\n    noteService.getAll().then((notes) => setNotes(notes));\n  }, []);\n\n  const createNote = async (newNoteObject) => {\n    try {\n      const createdNote = await notesApi.create(newNoteObject);\n      console.log('Note created:', createdNote);\n  \n      // Update the state with the new note\n      setNotes((prevNotes) => [...prevNotes, createdNote]);\n    } catch (error) {\n      console.error('Error creating note:', error);\n    }\n  };\n  \n\n  const handleEdit = (id) => {\n    const noteToBeEdited = notes.find((note) => note.id === id);\n    CreateNoteFormRef.current.setInitialValue(noteToBeEdited.note);\n    setEditingNote(noteToBeEdited);\n  };\n\n  const handleRemove = (id) => {\n    const noteToBeDeleted = notes.find((note) => note.id === id);\n    if (window.confirm(`Remove note \"${noteToBeDeleted.note}\"`)) {\n      noteService.remove(id).then(() => {\n        setNotes(notes.filter((note) => note.id !== id));\n        setMessage(`Removed note \"${noteToBeDeleted.note}\"`);\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Notes</h2>\n      {message && <div className=\"message\">{message}</div>}\n      {notes.map((note) => (\n        <Note\n          key={note.id}\n          note={note}\n          handleRemove={handleRemove}\n          handleEdit={() => handleEdit(note.id)}\n        />\n      ))}\n      <CreateNoteForm createNote={createNote} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}