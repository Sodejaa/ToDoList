{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Koti\\\\Desktop\\\\todolist\\\\frontend\\\\src\\\\components\\\\CreateNoteForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateNoteForm = ({\n  createNote\n}) => {\n  _s();\n  const [newNote, setNewNote] = useState(\"\");\n  const addNote = event => {\n    event.preventDefault();\n\n    // Check if newNote is not empty\n    if (!newNote || newNote.trim() === \"\") {\n      console.error('Error: Empty or undefined note cannot be added.');\n      return;\n    }\n\n    // Create an object with a note property\n    const newNoteObject = {\n      note: newNote\n    };\n\n    // Call the createNote function with the newNoteObject\n    createNote(newNoteObject);\n\n    // Reset the input\n    setNewNote(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"basicText\",\n        children: [\"Note:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newNote,\n          name: \"Note\",\n          onChange: ({\n            target\n          }) => setNewNote(target.value),\n          placeholder: \"note\",\n          className: \"inputBox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"createButton\",\n        children: \"create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateNoteForm, \"pHQ0OWRyAeZFFX5Xh1YeupE2UmM=\");\n_c = CreateNoteForm;\nexport default CreateNoteForm;\nvar _c;\n$RefreshReg$(_c, \"CreateNoteForm\");","map":{"version":3,"names":["useState","PropTypes","jsxDEV","_jsxDEV","CreateNoteForm","createNote","_s","newNote","setNewNote","addNote","event","preventDefault","trim","console","error","newNoteObject","note","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","type","value","name","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Koti/Desktop/todolist/frontend/src/components/CreateNoteForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CreateNoteForm = ({ createNote }) => {\r\n  const [newNote, setNewNote] = useState(\"\");\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Check if newNote is not empty\r\n    if (!newNote || newNote.trim() === \"\") {\r\n      console.error('Error: Empty or undefined note cannot be added.');\r\n      return;\r\n    }\r\n\r\n    // Create an object with a note property\r\n    const newNoteObject = { note: newNote };\r\n\r\n    // Call the createNote function with the newNoteObject\r\n    createNote(newNoteObject);\r\n\r\n    // Reset the input\r\n    setNewNote(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create new</h2>\r\n\r\n      <form onSubmit={addNote}>\r\n        <div className=\"basicText\">\r\n          Note:\r\n          <input\r\n            type=\"text\"\r\n            value={newNote}\r\n            name=\"Note\"\r\n            onChange={({ target }) => setNewNote(target.value)}\r\n            placeholder=\"note\"\r\n            className=\"inputBox\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"createButton\">\r\n          create\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateNoteForm;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMS,OAAO,GAAIC,KAAK,IAAK;IACzBA,KAAK,CAACC,cAAc,CAAC,CAAC;;IAEtB;IACA,IAAI,CAACJ,OAAO,IAAIA,OAAO,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACrCC,OAAO,CAACC,KAAK,CAAC,iDAAiD,CAAC;MAChE;IACF;;IAEA;IACA,MAAMC,aAAa,GAAG;MAAEC,IAAI,EAAET;IAAQ,CAAC;;IAEvC;IACAF,UAAU,CAACU,aAAa,CAAC;;IAEzB;IACAP,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEL,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnBlB,OAAA;MAAMmB,QAAQ,EAAEb,OAAQ;MAAAQ,QAAA,gBACtBd,OAAA;QAAKoB,SAAS,EAAC,WAAW;QAAAN,QAAA,GAAC,OAEzB,eAAAd,OAAA;UACEqB,IAAI,EAAC,MAAM;UACXC,KAAK,EAAElB,OAAQ;UACfmB,IAAI,EAAC,MAAM;UACXC,QAAQ,EAAEA,CAAC;YAAEC;UAAO,CAAC,KAAKpB,UAAU,CAACoB,MAAM,CAACH,KAAK,CAAE;UACnDI,WAAW,EAAC,MAAM;UAClBN,SAAS,EAAC;QAAU;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNlB,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAACD,SAAS,EAAC,cAAc;QAAAN,QAAA,EAAC;MAE/C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACf,EAAA,CA5CIF,cAAc;AAAA0B,EAAA,GAAd1B,cAAc;AA8CpB,eAAeA,cAAc;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}